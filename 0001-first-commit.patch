From 8e9d302f1645c1d4ff7eebe76501c5e9458533b8 Mon Sep 17 00:00:00 2001
From: xnltu12 <xnltu289@gmail.com>
Date: Sat, 5 Oct 2019 18:38:39 +0900
Subject: [PATCH] first commit

---
 Aria project Server!.sln                      |  22 +++
 Aria project Server!/App.config               |   6 +
 .../Aria project Server!.csproj               |  94 ++++++++++
 Aria project Server!/Class.cs                 | 160 +++++++++++++++++
 Aria project Server!/DTO.cs                   |  20 +++
 Aria project Server!/Form1.Designer.cs        | 135 ++++++++++++++
 Aria project Server!/Form1.cs                 |  32 ++++
 Aria project Server!/Form1.resx               | 120 +++++++++++++
 Aria project Server!/Program.cs               |  23 +++
 .../Properties/AssemblyInfo.cs                |  36 ++++
 .../Properties/Resources.Designer.cs          |  71 ++++++++
 .../Properties/Resources.resx                 | 117 ++++++++++++
 .../Properties/Settings.Designer.cs           |  30 ++++
 .../Properties/Settings.settings              |   7 +
 Aria project Server!/USERS.cs                 | 170 ++++++++++++++++++
 15 files changed, 1043 insertions(+)
 create mode 100644 Aria project Server!.sln
 create mode 100644 Aria project Server!/App.config
 create mode 100644 Aria project Server!/Aria project Server!.csproj
 create mode 100644 Aria project Server!/Class.cs
 create mode 100644 Aria project Server!/DTO.cs
 create mode 100644 Aria project Server!/Form1.Designer.cs
 create mode 100644 Aria project Server!/Form1.cs
 create mode 100644 Aria project Server!/Form1.resx
 create mode 100644 Aria project Server!/Program.cs
 create mode 100644 Aria project Server!/Properties/AssemblyInfo.cs
 create mode 100644 Aria project Server!/Properties/Resources.Designer.cs
 create mode 100644 Aria project Server!/Properties/Resources.resx
 create mode 100644 Aria project Server!/Properties/Settings.Designer.cs
 create mode 100644 Aria project Server!/Properties/Settings.settings
 create mode 100644 Aria project Server!/USERS.cs

diff --git a/Aria project Server!.sln b/Aria project Server!.sln
new file mode 100644
index 0000000..da07aa5
--- /dev/null
+++ b/Aria project Server!.sln	
@@ -0,0 +1,22 @@
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 14
+VisualStudioVersion = 14.0.25420.1
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "Aria project Server!", "Aria project Server!\Aria project Server!.csproj", "{C2C38D77-7FAB-416D-993D-F50BC5E2D4A6}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Any CPU = Debug|Any CPU
+		Release|Any CPU = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{C2C38D77-7FAB-416D-993D-F50BC5E2D4A6}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{C2C38D77-7FAB-416D-993D-F50BC5E2D4A6}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{C2C38D77-7FAB-416D-993D-F50BC5E2D4A6}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{C2C38D77-7FAB-416D-993D-F50BC5E2D4A6}.Release|Any CPU.Build.0 = Release|Any CPU
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff --git a/Aria project Server!/App.config b/Aria project Server!/App.config
new file mode 100644
index 0000000..88fa402
--- /dev/null
+++ b/Aria project Server!/App.config	
@@ -0,0 +1,6 @@
+﻿<?xml version="1.0" encoding="utf-8" ?>
+<configuration>
+    <startup> 
+        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.2" />
+    </startup>
+</configuration>
\ No newline at end of file
diff --git a/Aria project Server!/Aria project Server!.csproj b/Aria project Server!/Aria project Server!.csproj
new file mode 100644
index 0000000..126eabc
--- /dev/null
+++ b/Aria project Server!/Aria project Server!.csproj	
@@ -0,0 +1,94 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
+  <PropertyGroup>
+    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
+    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
+    <ProjectGuid>{C2C38D77-7FAB-416D-993D-F50BC5E2D4A6}</ProjectGuid>
+    <OutputType>WinExe</OutputType>
+    <AppDesignerFolder>Properties</AppDesignerFolder>
+    <RootNamespace>Aria_project_Server_</RootNamespace>
+    <AssemblyName>Aria project Server!</AssemblyName>
+    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
+    <FileAlignment>512</FileAlignment>
+    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
+    <PlatformTarget>AnyCPU</PlatformTarget>
+    <DebugSymbols>true</DebugSymbols>
+    <DebugType>full</DebugType>
+    <Optimize>false</Optimize>
+    <OutputPath>bin\Debug\</OutputPath>
+    <DefineConstants>DEBUG;TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
+    <PlatformTarget>AnyCPU</PlatformTarget>
+    <DebugType>pdbonly</DebugType>
+    <Optimize>true</Optimize>
+    <OutputPath>bin\Release\</OutputPath>
+    <DefineConstants>TRACE</DefineConstants>
+    <ErrorReport>prompt</ErrorReport>
+    <WarningLevel>4</WarningLevel>
+  </PropertyGroup>
+  <ItemGroup>
+    <Reference Include="MySql.Data, Version=8.0.17.0, Culture=neutral, PublicKeyToken=c5687fc88969c44d, processorArchitecture=MSIL" />
+    <Reference Include="System" />
+    <Reference Include="System.Core" />
+    <Reference Include="System.Xml.Linq" />
+    <Reference Include="System.Data.DataSetExtensions" />
+    <Reference Include="Microsoft.CSharp" />
+    <Reference Include="System.Data" />
+    <Reference Include="System.Deployment" />
+    <Reference Include="System.Drawing" />
+    <Reference Include="System.Net.Http" />
+    <Reference Include="System.Windows.Forms" />
+    <Reference Include="System.Xml" />
+  </ItemGroup>
+  <ItemGroup>
+    <Compile Include="Class.cs" />
+    <Compile Include="DTO.cs" />
+    <Compile Include="Form1.cs">
+      <SubType>Form</SubType>
+    </Compile>
+    <Compile Include="Form1.Designer.cs">
+      <DependentUpon>Form1.cs</DependentUpon>
+    </Compile>
+    <Compile Include="Program.cs" />
+    <Compile Include="Properties\AssemblyInfo.cs" />
+    <Compile Include="USERS.cs" />
+    <EmbeddedResource Include="Form1.resx">
+      <DependentUpon>Form1.cs</DependentUpon>
+    </EmbeddedResource>
+    <EmbeddedResource Include="Properties\Resources.resx">
+      <Generator>ResXFileCodeGenerator</Generator>
+      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
+      <SubType>Designer</SubType>
+    </EmbeddedResource>
+    <Compile Include="Properties\Resources.Designer.cs">
+      <AutoGen>True</AutoGen>
+      <DependentUpon>Resources.resx</DependentUpon>
+    </Compile>
+    <None Include="Properties\Settings.settings">
+      <Generator>SettingsSingleFileGenerator</Generator>
+      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
+    </None>
+    <Compile Include="Properties\Settings.Designer.cs">
+      <AutoGen>True</AutoGen>
+      <DependentUpon>Settings.settings</DependentUpon>
+      <DesignTimeSharedInput>True</DesignTimeSharedInput>
+    </Compile>
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="App.config" />
+  </ItemGroup>
+  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
+  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
+       Other similar extension points exist, see Microsoft.Common.targets.
+  <Target Name="BeforeBuild">
+  </Target>
+  <Target Name="AfterBuild">
+  </Target>
+  -->
+</Project>
\ No newline at end of file
diff --git a/Aria project Server!/Class.cs b/Aria project Server!/Class.cs
new file mode 100644
index 0000000..24fcce6
--- /dev/null
+++ b/Aria project Server!/Class.cs	
@@ -0,0 +1,160 @@
+﻿using MySql.Data.MySqlClient;
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace Aria_project_server
+{
+    class USERS
+    {
+        public string user_id { set; get; }
+        public string pass_word { set; get; }
+        public int level { set; get; }
+        public string e_mail { set; get; }
+        public string first_name { set; get; }
+        public string last_name { set; get; }
+
+    }
+
+    public class TBL_PRODUCTS
+    {
+        public string Lot_id { set; get; }
+        public int Model { set; get; }
+        public string Line_id { set; get; }
+        public int Total_product_count { set; get; }
+        public int Product_speed_warn { set; get; }
+        public float Product_fail_rate_warn { set; get; }
+        public string Product_color { set; get; }
+        public float Temp_margin { set; get; }
+        public float Humid_margin { set; get; }
+        public string Oper_id { set; get; }
+        public int Working_state { set; get; }
+        public int Lot_created_time { set; get; }
+        public int Lot_start_time { set; get; }
+        public int Lot_end_time { set; get; }
+    }
+
+    public class TBL_MODEL
+    {
+        public int Model_id { set; get; }
+        public float Model_temp { set; get; }
+        public float Model_humidity { set; get; }
+        public string Aname { set; get; }
+    }
+
+    public class TBL_LOT
+    {
+        private static string Lot_id;
+        public int Model_id { set; get; }
+        public string Line_id { set; get; }
+        public int Total_product_count { set; get; }
+        public int Product_speed_warn { set; get; }
+        public float Product_fail_rate_warn { set; get; }
+        public string Product_color { set; get; }
+        public float Temp_margin { set; get; }
+        public float Humid_margin { set; get; }
+        public string Oper_id { set; get; }
+        public int Working_state { set; get; }
+        public int Lot_created_time { set; get; }
+        public int Lot_start_time { set; get; }
+        public int Lot_end_time { set; get; }
+    }
+
+    public class TBL_LINE
+    {
+        public int _Id { set; get; }
+        public string Aname { set; get; }
+        public string State { set; get; }
+        public string Working_lot { set; get; }
+        public float Line_temp { set; get; }
+        public float Line_humidity { set; get; }
+    }
+
+    public class TBL_LINE2
+    {
+        public int _Id { set; get; }
+        public string Aname { set; get; }
+        public string State { set; get; }
+        public string Working_lot { set; get; }
+        public float Line_temp { set; get; }
+        public float Line_humidity { set; get; }
+    }
+
+    class CDbMgr
+    {
+        // 접속관리
+        public MySqlConnection Connection()
+        {
+            MySqlConnection conn;
+            string strconn = "Server=192.168.111.226;Database=Aria;Uid=root;Pwd=1234;";
+            conn = new MySqlConnection(strconn);
+            conn.Open();
+            return conn;
+            
+        }
+        /// <summary>
+        /// 접속 해제
+        /// </summary>
+        /// <param name="conn">MySQL연결 함수 객체</param>
+        public void disConnect(MySqlConnection conn)
+        {
+            // 접속 해제
+            conn.Close();
+        }
+        // 테이블관리
+        // USERR
+    }
+
+
+    class USER_SET
+    {
+        public void DB_USERS_INS()
+        {
+            MySqlConnection conn;
+            string strconn = "Server=192.168.111.226;Database=Aria;Uid=root;Pwd=1234;";
+            conn = new MySqlConnection(strconn);
+            conn.Open();
+            string SQL = "INSERT INTO USERS values('m2','123',1,'3@e','3','3');";
+            MySqlCommand cmd = new MySqlCommand(SQL, conn);
+            MySqlDataReader rdr = cmd.ExecuteReader();
+        }
+
+        /// <summary>
+        /// 
+        /// </summary>
+        /// <param name="user_id"></param>
+        /// <returns></returns>
+        public string DB_USERS_SEL(string user_id)
+        {
+            // select * from USERS where id = "user_id";
+            return "";
+        }
+
+        /// <summary>
+        /// 
+        /// </summary>
+        /// <param name="user_id"></param>
+        /// <returns></returns>
+        public string DB_USERS_DEL(string user_id)
+        {
+            return "";
+        }
+
+        public string DB_USERS_UP(string user_id)
+        {
+            return "";
+        }
+        // TBL_PRODUCTS
+        // TBL_MODEL
+        // TBL_LOT
+        // LINE
+
+        public string Login_Form(string user_id, string user_pw)
+        {
+            return "no, 1, 2, 비밀번호가 틀렸습니다";
+        }
+    }
+}
+
diff --git a/Aria project Server!/DTO.cs b/Aria project Server!/DTO.cs
new file mode 100644
index 0000000..c9b510d
--- /dev/null
+++ b/Aria project Server!/DTO.cs	
@@ -0,0 +1,20 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace Aria_project_Server_
+{
+
+    // DTO(Data Transfer Object) 는 계층간 데이터 교환을 
+    // 로직을 가지지 않는 순수한 데이터 객체,
+
+    class DTO
+    {
+
+    }
+
+
+
+}
diff --git a/Aria project Server!/Form1.Designer.cs b/Aria project Server!/Form1.Designer.cs
new file mode 100644
index 0000000..e06a5d2
--- /dev/null
+++ b/Aria project Server!/Form1.Designer.cs	
@@ -0,0 +1,135 @@
+﻿namespace Aria_project_Server_
+{
+    partial class Form1
+    {
+        /// <summary>
+        /// 필수 디자이너 변수입니다.
+        /// </summary>
+        private System.ComponentModel.IContainer components = null;
+
+        /// <summary>
+        /// 사용 중인 모든 리소스를 정리합니다.
+        /// </summary>
+        /// <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
+        protected override void Dispose(bool disposing)
+        {
+            if (disposing && (components != null))
+            {
+                components.Dispose();
+            }
+            base.Dispose(disposing);
+        }
+
+        #region Windows Form 디자이너에서 생성한 코드
+
+        /// <summary>
+        /// 디자이너 지원에 필요한 메서드입니다. 
+        /// 이 메서드의 내용을 코드 편집기로 수정하지 마세요.
+        /// </summary>
+        private void InitializeComponent()
+        {
+            this.button1 = new System.Windows.Forms.Button();
+            this.textBox1 = new System.Windows.Forms.TextBox();
+            this.textBox2 = new System.Windows.Forms.TextBox();
+            this.textBox3 = new System.Windows.Forms.TextBox();
+            this.textBox4 = new System.Windows.Forms.TextBox();
+            this.textBox5 = new System.Windows.Forms.TextBox();
+            this.textBox6 = new System.Windows.Forms.TextBox();
+            this.label1 = new System.Windows.Forms.Label();
+            this.SuspendLayout();
+            // 
+            // button1
+            // 
+            this.button1.Location = new System.Drawing.Point(433, 626);
+            this.button1.Name = "button1";
+            this.button1.Size = new System.Drawing.Size(75, 23);
+            this.button1.TabIndex = 0;
+            this.button1.Text = "button1";
+            this.button1.UseVisualStyleBackColor = true;
+            this.button1.Click += new System.EventHandler(this.button1_Click);
+            // 
+            // textBox1
+            // 
+            this.textBox1.Location = new System.Drawing.Point(445, 119);
+            this.textBox1.Name = "textBox1";
+            this.textBox1.Size = new System.Drawing.Size(100, 25);
+            this.textBox1.TabIndex = 1;
+            // 
+            // textBox2
+            // 
+            this.textBox2.Location = new System.Drawing.Point(445, 168);
+            this.textBox2.Name = "textBox2";
+            this.textBox2.Size = new System.Drawing.Size(100, 25);
+            this.textBox2.TabIndex = 2;
+            // 
+            // textBox3
+            // 
+            this.textBox3.Location = new System.Drawing.Point(445, 225);
+            this.textBox3.Name = "textBox3";
+            this.textBox3.Size = new System.Drawing.Size(100, 25);
+            this.textBox3.TabIndex = 3;
+            // 
+            // textBox4
+            // 
+            this.textBox4.Location = new System.Drawing.Point(445, 284);
+            this.textBox4.Name = "textBox4";
+            this.textBox4.Size = new System.Drawing.Size(100, 25);
+            this.textBox4.TabIndex = 4;
+            // 
+            // textBox5
+            // 
+            this.textBox5.Location = new System.Drawing.Point(445, 343);
+            this.textBox5.Name = "textBox5";
+            this.textBox5.Size = new System.Drawing.Size(100, 25);
+            this.textBox5.TabIndex = 5;
+            // 
+            // textBox6
+            // 
+            this.textBox6.Location = new System.Drawing.Point(445, 397);
+            this.textBox6.Name = "textBox6";
+            this.textBox6.Size = new System.Drawing.Size(100, 25);
+            this.textBox6.TabIndex = 6;
+            // 
+            // label1
+            // 
+            this.label1.AutoSize = true;
+            this.label1.Location = new System.Drawing.Point(157, 520);
+            this.label1.Name = "label1";
+            this.label1.Size = new System.Drawing.Size(45, 15);
+            this.label1.TabIndex = 7;
+            this.label1.Text = "label1";
+            // 
+            // Form1
+            // 
+            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 15F);
+            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
+            this.ClientSize = new System.Drawing.Size(1200, 751);
+            this.Controls.Add(this.label1);
+            this.Controls.Add(this.textBox6);
+            this.Controls.Add(this.textBox5);
+            this.Controls.Add(this.textBox4);
+            this.Controls.Add(this.textBox3);
+            this.Controls.Add(this.textBox2);
+            this.Controls.Add(this.textBox1);
+            this.Controls.Add(this.button1);
+            this.Name = "Form1";
+            this.Text = "Form1";
+            this.Load += new System.EventHandler(this.Form1_Load);
+            this.ResumeLayout(false);
+            this.PerformLayout();
+
+        }
+
+        #endregion
+
+        private System.Windows.Forms.Button button1;
+        public System.Windows.Forms.TextBox textBox2;
+        public System.Windows.Forms.TextBox textBox3;
+        public System.Windows.Forms.TextBox textBox4;
+        public System.Windows.Forms.TextBox textBox5;
+        public System.Windows.Forms.TextBox textBox6;
+        public System.Windows.Forms.TextBox textBox1;
+        private System.Windows.Forms.Label label1;
+    }
+}
+
diff --git a/Aria project Server!/Form1.cs b/Aria project Server!/Form1.cs
new file mode 100644
index 0000000..f452f29
--- /dev/null
+++ b/Aria project Server!/Form1.cs	
@@ -0,0 +1,32 @@
+﻿using System;
+using System.Collections.Generic;
+using System.ComponentModel;
+using System.Data;
+using System.Drawing;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+using System.Windows.Forms;
+
+namespace Aria_project_Server_
+{
+    public partial class Form1 : Form
+    {
+        public Form1()
+        {
+            InitializeComponent();
+        }
+
+        private void Form1_Load(object sender, EventArgs e)
+        {
+            
+        }
+
+        private void button1_Click(object sender, EventArgs e)
+        {
+            USER_SET u = new USER_SET();
+            u.DB_USERS_INS();
+            label1.Text = textBox1.Text+""+textBox2.Text+""+textBox3.Text+""+textBox4.Text+""+textBox5.Text+""+textBox6.Text;
+        }
+    }
+}
diff --git a/Aria project Server!/Form1.resx b/Aria project Server!/Form1.resx
new file mode 100644
index 0000000..1af7de1
--- /dev/null
+++ b/Aria project Server!/Form1.resx	
@@ -0,0 +1,120 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" use="required" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+              <xsd:attribute ref="xml:space" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff --git a/Aria project Server!/Program.cs b/Aria project Server!/Program.cs
new file mode 100644
index 0000000..beb6d3d
--- /dev/null
+++ b/Aria project Server!/Program.cs	
@@ -0,0 +1,23 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Threading.Tasks;
+using System.Windows.Forms;
+
+namespace Aria_project_Server_
+{
+    static class Program
+    {
+        /// <summary>
+        /// 해당 응용 프로그램의 주 진입점입니다.
+        /// </summary>
+        [STAThread]
+        static void Main()
+        {
+            Form1 newform1 = new Form1();
+            Application.EnableVisualStyles();
+            Application.SetCompatibleTextRenderingDefault(false);
+            Application.Run(newform1);
+        }
+    }
+}
diff --git a/Aria project Server!/Properties/AssemblyInfo.cs b/Aria project Server!/Properties/AssemblyInfo.cs
new file mode 100644
index 0000000..cda264a
--- /dev/null
+++ b/Aria project Server!/Properties/AssemblyInfo.cs	
@@ -0,0 +1,36 @@
+﻿using System.Reflection;
+using System.Runtime.CompilerServices;
+using System.Runtime.InteropServices;
+
+// 어셈블리에 대한 일반 정보는 다음 특성 집합을 통해 
+// 제어됩니다. 어셈블리와 관련된 정보를 수정하려면
+// 이러한 특성 값을 변경하세요.
+[assembly: AssemblyTitle("Aria project Server!")]
+[assembly: AssemblyDescription("")]
+[assembly: AssemblyConfiguration("")]
+[assembly: AssemblyCompany("")]
+[assembly: AssemblyProduct("Aria project Server!")]
+[assembly: AssemblyCopyright("Copyright ©  2019")]
+[assembly: AssemblyTrademark("")]
+[assembly: AssemblyCulture("")]
+
+// ComVisible을 false로 설정하면 이 어셈블리의 형식이 COM 구성 요소에 
+// 표시되지 않습니다.  COM에서 이 어셈블리의 형식에 액세스하려면 
+// 해당 형식에 대해 ComVisible 특성을 true로 설정하세요.
+[assembly: ComVisible(false)]
+
+// 이 프로젝트가 COM에 노출되는 경우 다음 GUID는 typelib의 ID를 나타냅니다.
+[assembly: Guid("c2c38d77-7fab-416d-993d-f50bc5e2d4a6")]
+
+// 어셈블리의 버전 정보는 다음 네 가지 값으로 구성됩니다.
+//
+//      주 버전
+//      부 버전 
+//      빌드 번호
+//      수정 버전
+//
+// 모든 값을 지정하거나 아래와 같이 '*'를 사용하여 빌드 번호 및 수정 번호가 자동으로 
+// 지정되도록 할 수 있습니다.
+// [assembly: AssemblyVersion("1.0.*")]
+[assembly: AssemblyVersion("1.0.0.0")]
+[assembly: AssemblyFileVersion("1.0.0.0")]
diff --git a/Aria project Server!/Properties/Resources.Designer.cs b/Aria project Server!/Properties/Resources.Designer.cs
new file mode 100644
index 0000000..2d3e53c
--- /dev/null
+++ b/Aria project Server!/Properties/Resources.Designer.cs	
@@ -0,0 +1,71 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     이 코드는 도구를 사용하여 생성되었습니다.
+//     런타임 버전:4.0.30319.42000
+//
+//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
+//     이러한 변경 내용이 손실됩니다.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace Aria_project_Server_.Properties
+{
+
+
+    /// <summary>
+    ///   지역화된 문자열 등을 찾기 위한 강력한 형식의 리소스 클래스입니다.
+    /// </summary>
+    // 이 클래스는 ResGen 또는 Visual Studio와 같은 도구를 통해 StronglyTypedResourceBuilder
+    // 클래스에서 자동으로 생성되었습니다.
+    // 멤버를 추가하거나 제거하려면 .ResX 파일을 편집한 다음 /str 옵션을 사용하여
+    // ResGen을 다시 실행하거나 VS 프로젝트를 다시 빌드하십시오.
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
+    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    internal class Resources
+    {
+
+        private static global::System.Resources.ResourceManager resourceMan;
+
+        private static global::System.Globalization.CultureInfo resourceCulture;
+
+        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        internal Resources()
+        {
+        }
+
+        /// <summary>
+        ///   이 클래스에서 사용하는 캐시된 ResourceManager 인스턴스를 반환합니다.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Resources.ResourceManager ResourceManager
+        {
+            get
+            {
+                if ((resourceMan == null))
+                {
+                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Aria_project_Server_.Properties.Resources", typeof(Resources).Assembly);
+                    resourceMan = temp;
+                }
+                return resourceMan;
+            }
+        }
+
+        /// <summary>
+        ///   이 강력한 형식의 리소스 클래스를 사용하여 모든 리소스 조회에 대해
+        ///   현재 스레드의 CurrentUICulture 속성을 재정의합니다.
+        /// </summary>
+        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
+        internal static global::System.Globalization.CultureInfo Culture
+        {
+            get
+            {
+                return resourceCulture;
+            }
+            set
+            {
+                resourceCulture = value;
+            }
+        }
+    }
+}
diff --git a/Aria project Server!/Properties/Resources.resx b/Aria project Server!/Properties/Resources.resx
new file mode 100644
index 0000000..af7dbeb
--- /dev/null
+++ b/Aria project Server!/Properties/Resources.resx	
@@ -0,0 +1,117 @@
+﻿<?xml version="1.0" encoding="utf-8"?>
+<root>
+  <!-- 
+    Microsoft ResX Schema 
+    
+    Version 2.0
+    
+    The primary goals of this format is to allow a simple XML format 
+    that is mostly human readable. The generation and parsing of the 
+    various data types are done through the TypeConverter classes 
+    associated with the data types.
+    
+    Example:
+    
+    ... ado.net/XML headers & schema ...
+    <resheader name="resmimetype">text/microsoft-resx</resheader>
+    <resheader name="version">2.0</resheader>
+    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
+    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
+    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
+    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
+    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
+        <value>[base64 mime encoded serialized .NET Framework object]</value>
+    </data>
+    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
+        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
+        <comment>This is a comment</comment>
+    </data>
+                
+    There are any number of "resheader" rows that contain simple 
+    name/value pairs.
+    
+    Each data row contains a name, and value. The row also contains a 
+    type or mimetype. Type corresponds to a .NET class that support 
+    text/value conversion through the TypeConverter architecture. 
+    Classes that don't support this are serialized and stored with the 
+    mimetype set.
+    
+    The mimetype is used for serialized objects, and tells the 
+    ResXResourceReader how to depersist the object. This is currently not 
+    extensible. For a given mimetype the value must be set accordingly:
+    
+    Note - application/x-microsoft.net.object.binary.base64 is the format 
+    that the ResXResourceWriter will generate, however the reader can 
+    read any of the formats listed below.
+    
+    mimetype: application/x-microsoft.net.object.binary.base64
+    value   : The object must be serialized with 
+            : System.Serialization.Formatters.Binary.BinaryFormatter
+            : and then encoded with base64 encoding.
+    
+    mimetype: application/x-microsoft.net.object.soap.base64
+    value   : The object must be serialized with 
+            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
+            : and then encoded with base64 encoding.
+
+    mimetype: application/x-microsoft.net.object.bytearray.base64
+    value   : The object must be serialized into a byte array 
+            : using a System.ComponentModel.TypeConverter
+            : and then encoded with base64 encoding.
+    -->
+  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
+    <xsd:element name="root" msdata:IsDataSet="true">
+      <xsd:complexType>
+        <xsd:choice maxOccurs="unbounded">
+          <xsd:element name="metadata">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" />
+              <xsd:attribute name="type" type="xsd:string" />
+              <xsd:attribute name="mimetype" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="assembly">
+            <xsd:complexType>
+              <xsd:attribute name="alias" type="xsd:string" />
+              <xsd:attribute name="name" type="xsd:string" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="data">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
+              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
+              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
+            </xsd:complexType>
+          </xsd:element>
+          <xsd:element name="resheader">
+            <xsd:complexType>
+              <xsd:sequence>
+                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
+              </xsd:sequence>
+              <xsd:attribute name="name" type="xsd:string" use="required" />
+            </xsd:complexType>
+          </xsd:element>
+        </xsd:choice>
+      </xsd:complexType>
+    </xsd:element>
+  </xsd:schema>
+  <resheader name="resmimetype">
+    <value>text/microsoft-resx</value>
+  </resheader>
+  <resheader name="version">
+    <value>2.0</value>
+  </resheader>
+  <resheader name="reader">
+    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+  <resheader name="writer">
+    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
+  </resheader>
+</root>
\ No newline at end of file
diff --git a/Aria project Server!/Properties/Settings.Designer.cs b/Aria project Server!/Properties/Settings.Designer.cs
new file mode 100644
index 0000000..662acdd
--- /dev/null
+++ b/Aria project Server!/Properties/Settings.Designer.cs	
@@ -0,0 +1,30 @@
+﻿//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//     Runtime Version:4.0.30319.42000
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+namespace Aria_project_Server_.Properties
+{
+
+
+    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "11.0.0.0")]
+    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
+    {
+
+        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
+
+        public static Settings Default
+        {
+            get
+            {
+                return defaultInstance;
+            }
+        }
+    }
+}
diff --git a/Aria project Server!/Properties/Settings.settings b/Aria project Server!/Properties/Settings.settings
new file mode 100644
index 0000000..3964565
--- /dev/null
+++ b/Aria project Server!/Properties/Settings.settings	
@@ -0,0 +1,7 @@
+﻿<?xml version='1.0' encoding='utf-8'?>
+<SettingsFile xmlns="http://schemas.microsoft.com/VisualStudio/2004/01/settings" CurrentProfile="(Default)">
+  <Profiles>
+    <Profile Name="(Default)" />
+  </Profiles>
+  <Settings />
+</SettingsFile>
diff --git a/Aria project Server!/USERS.cs b/Aria project Server!/USERS.cs
new file mode 100644
index 0000000..c8c834d
--- /dev/null
+++ b/Aria project Server!/USERS.cs	
@@ -0,0 +1,170 @@
+﻿using MySql.Data.MySqlClient;
+using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Text;
+using System.Threading.Tasks;
+
+namespace Aria_project_Server_
+{
+    public class USERS
+    {
+        public string user_id { set; get; }
+        public string pass_word { set; get; }
+        public int level { set; get; }
+        public string e_mail { set; get; }
+        public string first_name { set; get; }
+        public string last_name { set; get; }
+    }
+    public class TBL_PRODUCTS
+    {
+        public string Lot_id { set; get; }
+        public int Model { set; get; }
+        public string Line_id { set; get; }
+        public int Total_product_count { set; get; }
+        public int Product_speed_warn { set; get; }
+        public float Product_fail_rate_warn { set; get; }
+        public string Product_color { set; get; }
+        public float Temp_margin { set; get; }
+        public float Humid_margin { set; get; }
+        public string Oper_id { set; get; }
+        public int Working_state { set; get; }
+        public int Lot_created_time { set; get; }
+        public int Lot_start_time { set; get; }
+        public int Lot_end_time { set; get; }
+    }
+
+    public class TBL_MODEL
+    {
+        public int Model_id { set; get; }
+        public float Model_temp { set; get; }
+        public float Model_humidity { set; get; }
+        public string Aname { set; get; }
+    }
+
+    public class TBL_LOT
+    {
+        private static string Lot_id;
+        public int Model_id { set; get; }
+        public string Line_id { set; get; }
+        public int Total_product_count { set; get; }
+        public int Product_speed_warn { set; get; }
+        public float Product_fail_rate_warn { set; get; }
+        public string Product_color { set; get; }
+        public float Temp_margin { set; get; }
+        public float Humid_margin { set; get; }
+        public string Oper_id { set; get; }
+        public int Working_state { set; get; }
+        public int Lot_created_time { set; get; }
+        public int Lot_start_time { set; get; }
+        public int Lot_end_time { set; get; }
+    }
+
+    public class TBL_LINE
+    {
+        public int _Id { set; get; }
+        public string Aname { set; get; }
+        public string State { set; get; }
+        public string Working_lot { set; get; }
+        public float Line_temp { set; get; }
+        public float Line_humidity { set; get; }
+    }
+
+    public class TBL_LINE2
+    {
+        public int _Id { set; get; }
+        public string Aname { set; get; }
+        public string State { set; get; }
+        public string Working_lot { set; get; }
+        public float Line_temp { set; get; }
+        public float Line_humidity { set; get; }
+    }
+
+    class CDbMgr
+    {
+        // 접속관리
+        public MySqlConnection Connection()
+        {
+            MySqlConnection conn;
+            string strconn = "Server=192.168.111.226;Database=Aria;Uid=root;Pwd=1234;";
+            conn = new MySqlConnection(strconn);
+            conn.Open();
+            return conn;
+
+        }
+        /// <summary>
+        /// 접속 해제
+        /// </summary>
+        /// <param name="conn">MySQL연결 함수 객체</param>
+        public void disConnect(MySqlConnection conn)
+        {
+            // 접속 해제
+            conn.Close();
+        }
+        // 테이블관리
+        // USERR
+    }
+
+
+    public class USER_SET
+    {
+        public void DB_USERS_INS()
+        {
+            MySqlConnectionStringBuilder conn2 = new MySqlConnectionStringBuilder();
+            conn2.Server = "192.168.111.226";
+            conn2.Port = 3306;
+            conn2.UserID = "root";
+            conn2.Password = "1234";
+            conn2.Database = "Aria";
+            string strconn = conn2.ToString();
+            MySqlConnection conn;
+            //string strconn = "Server=192.168.111.226;Database=Aria;Uid=root;Pwd=1234;";
+            conn = new MySqlConnection(strconn);
+            conn.Open();
+            Form1 FM = new Form1();
+            //String SQL = "INSERT INTO Amachine1 VALUES(no_seq.NEXTVAL, " +" '" + time1 + "', 'abc')";
+
+            //string SQL = "INSERT INTO USERS" + string.Format(" VALUES " 
+            string SQL = "INSERT INTO users(user_id, pass_word, LEVEL, e_mail, first_name, last_name) VALUES('"+FM.textBox1.Text+"','"+FM.textBox2.Text+"',3,'" + FM.textBox4.Text + "','" + FM.textBox5.Text + "','" + FM.textBox6.Text + "');";
+            MySqlCommand cmd = new MySqlCommand(SQL, conn);
+            cmd.ExecuteNonQuery();
+            //MySqlDataReader rdr = cmd.ExecuteReader();
+            conn.Close();
+        }
+
+        /// <summary>
+        /// 
+        /// </summary>
+        /// <param name="user_id"></param>
+        /// <returns></returns>
+        public string DB_USERS_SEL(string user_id)
+        {
+            // select * from USERS where id = "user_id";
+            return "";
+        }
+
+        /// <summary>
+        /// 
+        /// </summary>
+        /// <param name="user_id"></param>
+        /// <returns></returns>
+        public string DB_USERS_DEL(string user_id)
+        {
+            return "";
+        }
+
+        public string DB_USERS_UP(string user_id)
+        {
+            return "";
+        }
+        // TBL_PRODUCTS
+        // TBL_MODEL
+        // TBL_LOT
+        // LINE
+
+        public string Login_Form(string user_id, string user_pw)
+        {
+            return "no, 1, 2, 비밀번호가 틀렸습니다";
+        }
+    }
+}
-- 
2.22.0.windows.1

